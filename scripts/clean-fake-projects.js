const { MongoClient } = require('mongodb');

// Projets fictifs √† supprimer
const fakeProjectNames = [
  "Centre de Formation Casablanca",
  "Projet Entrepreneuriat Rabat", 
  "Centre Social Marrakech",
  "Programme Jeunesse F√®s"
];

async function cleanFakeProjects() {
  const client = new MongoClient(process.env.MONGODB_URI || 'mongodb://localhost:27017');
  
  try {
    await client.connect();
    console.log('Connected to MongoDB');
    
    const db = client.db('association-najm');
    const projects = db.collection('projects');
    
    // Supprimer les projets fictifs
    const result = await projects.deleteMany({
      name: { $in: fakeProjectNames }
    });
    
    console.log(`‚úÖ ${result.deletedCount} projets fictifs supprim√©s!`);
    
    if (result.deletedCount > 0) {
      console.log('Projets supprim√©s:');
      fakeProjectNames.forEach(name => {
        console.log(`- ${name}`);
      });
    } else {
      console.log('Aucun projet fictif trouv√© dans la base de donn√©es.');
    }
    
    // Afficher les projets restants
    const remainingProjects = await projects.find({}).toArray();
    console.log(`\nüìä ${remainingProjects.length} projets restants dans la base de donn√©es:`);
    remainingProjects.forEach((project, index) => {
      console.log(`${index + 1}. ${project.name} - ${project.location || 'Localisation non d√©finie'}`);
    });
    
  } catch (error) {
    console.error('‚ùå Erreur:', error.message);
  } finally {
    await client.close();
  }
}

cleanFakeProjects();
